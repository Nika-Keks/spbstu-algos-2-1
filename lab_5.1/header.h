#pragma once
#include <stdio.h>

/*
* Структура Node сдержит одно поле типа int - данные самого узла,
* два поля типа Node_t* - указатели на левого и правого потомка .
*/
typedef struct Node_t {
	int data;
	struct Node_t* left;
	struct Node_t* right;
}Node;

/*
* NumberCounter:
* Функция для подсчета чисел в файле.
* На вход получает переменную типа FILE* - исходный файл.
* Возвращает переменную типа int - количество чисел.
*/
int NumberCounter(FILE* file);

/*
* CreateNode:
* Функция создания узла дерева с заданными данными.
* На вход получает переменную типа int -данные узла.
* Возвращает структуру типа Node* с заполненным полем data.
*/
Node* CreateNode(int data);

/*
* TreeHeight:
* Функция с рекурсией для подсчета высоты узла.
* На вход получает переменную типа Node* - узел, в котором нужно вычислить высоту.
* Возвращает переменную типа int - высоту узла.
*/
int TreeHeight(Node* node);

/*
* ReadArrayFromFile:
* Функция считывания массива чисел из файла.
* На вход получает переменную типа FILE* - исходный файл,
* переменную типа int* - пустой массив,
* переменную типа int - количество чисел в файле.
* Возвращает массив с числами, считанными из файла.
*/
void ReadArrayFromFile(FILE* file, int* Array, int N);

/*
* ReadTreeFromArray:
* Рекурсиная функция создания дерева из массива чисел.
* На вход получает переменную типа int* - массив чисел,
* переменную типа int* - указатель на ячейку массива,
* переменную типа int - количество чисел в массиве.
*/
Node* ReadTreeFromArray(int* Array, int* i, int n);

/*
* CreateAuxMartix:
* Функция создания вспомогательной матрицы, заполненной -1.
* На вход получает две переменные типа int - границы матрицы.
* Возвращает int** - матрицу, заполненную -1 заданного размера.
*/
int** CreateAuxMartix(int m, int n);

/*
* AuxMartixWithHeightDiff:
* Рекурсивная функция заполнения вспомогательной матрицы разностями высот поддеревьев в узлах.
* На вход получает переменную типа Node* - указатель на узел дерева,
* переменную типа int - первый указатель на ячейку матрицы,
* переменную типа int* - второй указатель на ячуйку матрицы,
* переменную типа int** - заполняемая матрица.
* Возвращает int** - матрицу, заполненную -1 заданного размера.
*/
void AuxMartixWithHeightDiff(Node* node, int y, int* x, int** Matrix);

/*
* PrintTreeWithHeightDiff:
* Функция вывода на экран дерева с разностями высот поддеревьев в узлах.
* На вход получает переменную типа int** - вспомогательная матрица,
* две переменные типа int  - границы матрицы.
*/
void PrintTreeWithHeightDiff(int** Matrix, int n, int m);

/*
* BuildTreeWithHeightDiff:
* Основная функция для считывания из файла и построения дерева с разностями высот поддеревьев в узлах.
* На вход получает переменную типа char const* - имя файла.
*/
void BuildTreeWithHeightDiff(char const* filename);

